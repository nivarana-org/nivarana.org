export const stopWords = new Set([
    "a",
    "an",
    "the",
    "and",
    "or",
    "but",
    "is",
    "are",
    "was",
    "were",
    "be",
    "been",
    "being",
    "to",
    "of",
    "in",
    "on",
    "at",
    "for",
    "with",
    "by",
    "from",
    "as",
    "into",
    "through",
    "during",
    "before",
    "after",
    "above",
    "below",
    "up",
    "down",
    "out",
    "off",
    "over",
    "under",
    "again",
    "further",
    "then",
    "once",
    "here",
    "there",
    "when",
    "where",
    "why",
    "how",
    "all",
    "any",
    "both",
    "each",
    "few",
    "more",
    "most",
    "other",
    "some",
    "such",
    "no",
    "nor",
    "not",
    "only",
    "own",
    "same",
    "so",
    "than",
    "too",
    "very",
    "s",
    "t",
    "can",
    "will",
    "just",
    "don",
    "should",
    "now",
    "about",
    "this",
    "that",
    "these",
    "those",
    "it",
    "he",
    "she",
    "we",
    "you",
    "i",
    "me",
    "him",
    "her",
    "us",
    "them",
    "my",
    "your",
    "his",
    "her",
    "its",
    "our",
    "their",
    "what",
    "which",
    "who",
    "whom",
    "whose",
    "this",
    "that",
    "these",
    "those",
    "am",
    "is",
    "are",
    "was",
    "were",
    "has",
    "have",
    "had",
    "do",
    "does",
    "did",
    "having",
    "doing",
    "would",
    "could",
    "should",
    "get",
    "also",
    "like",
    "one",
    "two",
    "three",
    "four",
    "five",
    "six",
    "seven",
    "eight",
    "nine",
    "ten",
    "etc",
    "e.g.",
    "i.e.",
    "vs",
    "via",
    "vs.",
    "may",
    "might",
    "must",
    "can",
    "could",
    "will",
    "would",
    "shall",
    "should",
    "want",
    "say",
    "said",
    "get",
    "go",
    "know",
    "make",
    "think",
    "take",
    "see",
    "come",
    "look",
    "give",
    "use",
    "find",
    "tell",
    "ask",
    "work",
    "seem",
    "feel",
    "try",
    "leave",
    "call",
    "many",
    "much",
    "little",
    "big",
    "small",
    "new",
    "old",
    "good",
    "bad",
    "great",
    "long",
    "short",
    "high",
    "low",
    "first",
    "last",
    "next",
    "previous",
    "every",
    "each",
    "another",
    "other",
    "such",
    "itself",
    "yourself",
    "himself",
    "herself",
    "ourselves",
    "themselves",
    "wherein",
    "whereupon",
    "wherever",
    "whither",
    "whoever",
    "whomever",
    "whosever",
    "whichever",
    "without",
    "within",
    "upon",
    "towards",
    "throughout",
    "beside",
    "besides",
    "among",
    "amongst",
    "beyond",
    "across",
    "behind",
    "outside",
    "inside",
    "around",
    "above",
    "below",
    "beneath",
    "furthermore",
    "moreover",
    "nonetheless",
    "nevertheless",
    "therefore",
    "consequently",
    "accordingly",
    "thus",
    "hence",
    "thereby",
    "whereby",
    "wherein",
    "wherefore",
    "notwithstanding",
    "thereafter",
    "thereby",
    "hereby",
    "therein",
    "hereinafter",
    "hereinabove",
    "hereafter",
    "hereunto",
    "whereunto",
    "wherewith",
    "wherefrom",
    "whereon",
    "whereof",
    "whereat",
    "whilst",
    "whithersoever",
    "whichever",
    "whosever",
    "whomever",
    "whoever",
    "whatsoever",
    "whatsoever",
    "whenever",
    "wherever",
    "whereafter",
    "whereupon",
    "wherewithal",
    "whatever",
    "whoever",
    "whomsoever",
    "whosever",
    "anybody",
    "anyone",
    "anything",
    "everybody",
    "everyone",
    "everything",
    "nobody",
    "noone",
    "nothing",
    "somebody",
    "someone",
    "something",
    "always",
    "often",
    "rarely",
    "seldom",
    "usually",
    "sometimes",
    "never",
    "ever",
    "almost",
    "nearly",
    "quite",
    "rather",
    "pretty",
    "such",
    "very",
    "too",
    "enough",
    "only",
    "just",
    "even",
    "then",
    "now",
    "soon",
    "late",
    "early",
    "ago",
    "today",
    "tomorrow",
    "yesterday",
    "tonight",
    "morning",
    "afternoon",
    "evening",
    "night",
    "week",
    "month",
    "year",
    "decade",
    "century",
    "millennium",
    "since",
    "until",
    "while",
    "when",
    "before",
    "after",
    "during",
    "though",
    "although",
    "unless",
    "until",
    "whether",
    "if",
    "else",
    "otherwise",
    "because",
    "since",
    "for",
    "while",
    "whereas",
    "wherever",
    "whichever",
    "whatever",
    "however",
    "whenever",
    "wherever",
    "whether",
    "whilst",
    "whither",
    "whence",
    "thence",
    "thenceforth",
    "onward",
    "forward",
    "backward",
    "homeward",
    "upward",
    "downward",
    "inward",
    "outward",
    "sideways",
    "forth",
    "back",
    "along",
    "across",
    "around",
    "through",
    "about",
    "above",
    "below",
    "between",
    "among",
    "beneath",
    "beside",
    "besides",
    "behind",
    "below",
    "beyond",
    "down",
    "during",
    "except",
    "for",
    "from",
    "in",
    "inside",
    "into",
    "like",
    "near",
    "of",
    "off",
    "on",
    "onto",
    "out",
    "outside",
    "over",
    "past",
    "round",
    "since",
    "through",
    "to",
    "toward",
    "under",
    "underneath",
    "until",
    "up",
    "upon",
    "with",
    "within",
    "without",
    "according",
    "because of",
    "by means of",
    "due to",
    "except for",
    "in addition to",
    "in case of",
    "in front of",
    "in place of",
    "in spite of",
    "instead of",
    "on account of",
    "on behalf of",
    "prior to",
    "with regard to",
    "with respect to",
    "they",
    // Common blog terms you might want to exclude
    "blog",
    "post",
    "posts",
    "article",
    "articles",
    "read",
    "more",
    "new",
    "author",
    "comments",
    "share",
    "subscribe",
    "website",
    "page",
    "content",
    "published",
    "date",
    "category",
    "tag",
    "tags",
    "edited",
    "parth",
    "sharma",
    "gayatri",
    "&nbsp;",
    "image",
    "become",
    "despite",
    "better",
    "used",
    "face",
    "per",
    "found",
    "making",
    "including",
    "able",
    "days",
    "working",
    "due",
    "common",
    "made",
    "asked",
    "day",
    "help",
    "done",
    "need",
    "against",
    "part",
    "told",
    "still",
    "several",
    "years",
    "ensure",
    "way",
    "especially",
]);

export const fetchWordCloud = async (db) => {
    const blogs = await db("blogs").select("description");
    let allText = "";

    blogs.forEach((blog) => {
        allText +=
            " " +
            blog.description
                .toLowerCase()
                .replace(/(<([^>]+)>)/gi, "")
                .replace(/^[^a-z]+|[^a-z]+$/g, " ");
    });

    const words = allText.split(/\s+/).filter((word) => {
        return word.length > 2 && /^[a-z]+$/.test(word) && !stopWords.has(word);
    });

    // Count word frequencies
    const wordCounts = {};
    words.forEach((word) => {
        wordCounts[word] = (wordCounts[word] || 0) + 1;
    });

    // Convert to array of { text: 'word', value: count } and sort
    const wordCloudData = Object.entries(wordCounts)
        .map(([text, value]) => ({ value: text, count: value }))
        .sort((a, b) => b.count - a.count)
        .slice(0, 100); // Limit to top 100 words
    return wordCloudData;
};
